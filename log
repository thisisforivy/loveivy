This trimester goal is to 
----1.
	- understand catalyst tree framework
	- expression numbering and advanced SQL building block
	- side effect: know more about scala
----2.
	- define edb algebra 
----3.
	- take akka event program class 



04/08/2014	Downloaded and read Scala quick tutorial http://www.scala-lang.org/docu/files/ScalaTutorial.pdf
		Found this useful book http://www.scala-lang.org/docu/files/ScalaByExample.pdf

04/14/2014      Found explaination of self:BaseType with Product =>, it basically means an alias of a specified type, and the 
                class extends this trait must mix in the Product trait. So, case class extends the abstract class, 
                will auto-generate the product interface method. e.g. case class a(x: Int, y: Int); val b = new a(1,2); 
                a.productArity will show 2.
                See good example here http://dcsobral.blogspot.com/2009/06/case-classes-and-product.html
                See http://www.scala-lang.org/old/node/8194.html

04/16/2014	Literature
		1. Algebras For Object-Oriented Query Languages (1993) http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.48.2860

		2. Overview of Turn Data Management Platform for Digital Advertising. PVLDB 6(11): 1138-1149 (2013)

		3. catalyst by Spark team. (A rule based query optimization tree framework). There are some slides on spark summit 2013. I also took a look of their source code. 
		4. *** First order calculus**** (SQL) means quantifiers and variable are range over set elements, not over calculus formula. Union, difference, catesian product,
			projection, selection---total 5 oeprators.
		5. NF^2 (non-first normal form), allow set attribute with nest and unnest operator extension.
 		6. AsterixDB from UCI. Store small dataum in byte buffer and the object have accessors to bind them.
		http://www.ics.uci.edu/~yingyib/papers/issm-bu.pdf

04/17/2014	Seems OO on hadoop meets the market requirement in modern age. "OO systems have not focused on bread-and-butter traditional business-data processing 
		applications where high performance, reliability, and scalability are crucial," Stonebraker said. 
		"This is a large market where relational systems excel and have enjoyed wide adoption. In Hadoop/spark, high performance, reliability and scalability is not an
		issue.

05/26/2014      Found out HBase has the advantage of incremental update in 
                real time, and can be used for analytical processing by 
                map-reduce job. It sits ontop of HDFS. So, the question is to 
                find out whether it supports nested relational model. 
                Splice machine uses it as the storage layer, since it support
                transactional update. A new architecture come to my mind 
                is that using HBase as entity db storage, and using spark to 
                query it. And use HBase to update it and maybe MR to do ETL.
                Need to find out how Splice machine put RDBMS ontop of it.

		
05/19/2014      Happens to see Hadoop partition function , it use Integer.MAX_VALUE to get rid of the negative hashCode
			public class HashPartitioner<K, V> extends Partitioner<K, V> {
			    public int getPartition(K key, V value, int numReduceTasks) {
				        return (key.hashCode() & Integer.MAX_VALUE) % numReduceTasks;
    			    }
			}


